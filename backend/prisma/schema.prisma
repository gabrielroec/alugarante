generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Board {
  id        Int      @id @default(autoincrement())
  name      String
  columns   Column[] 
}

model Column {
  id        Int      @id @default(autoincrement())
  name      String
  boardId   Int
  board     Board    @relation(fields: [boardId], references: [id])
  cards     Card[]  
}

model Imovel {
  id                   Int            @id @default(autoincrement())
  tipoImovelSelecionado String
  valorAluguel          Float
  valorIptu             Float?         
  valorCondominio       Float
  valorGas              Float
  planoSelecionado     String
  valorMensal           Float
  taxaSetup             Float
  card                  Card           @relation(fields: [cardId], references: [id])
  cardId                Int @unique
}

model Proprietario {
  id                        Int    @id @default(autoincrement())
  tipoPessoa                String
  cnpj                      String? 
  razaoSocial               String?
  estadoCivil               String
  cpfConjuge                String?
  nomeCompleto              String
  nomeCompletoConjuge       String?
  email                     String
  telefone                  String
  nacionalidade             String
  naturalidade              String
  dataNascimento            DateTime?
  cpf                       String?
  rg                        String?
  orgaoExpedidor            String?
  emailConjuge              String?
  telefoneConjuge           String?
  nacionalidadeConjuge      String?
  naturalidadeConjuge       String?
  dataNascimentoConjuge     DateTime?
  rgConjuge                 String?
  orgaoExpedidorConjuge      String?
  cep                       String
  estado                    String
  bairro                    String
  endereco                  String
  numero                    String
  complemento               String?
  anexoCpfRgMotorista       String?
  anexoCpfRgMotoristaConj   String?
  anexoEstadoCivil          String?
  anexoResidencia           String?
  anexoContratoSocial       String?
  card                      Card   @relation(fields: [cardId], references: [id])
  cardId                    Int @unique
}



model ImovelDetalhes {
  id                    Int      @id @default(autoincrement())
  finalidade            String
  tipoImovel            String
  valorAluguel          Float
  valorCondominio       Float
  valorIptu             Float?
  valorAgua             Float?
  valorGas              Float?
  administradorNome     String?
  administradorTelefone String?
  cepImovel             String
  cidade                String
  estado                String
  bairro                String
  endereco              String
  numero                String
  complemento           String?


  anexoCondominio       String?  
  anexoIptu             String?  
  anexoAgua             String?  
  anexoLuz              String?  
  anexoEscritura        String?  

  card                  Card?    @relation(fields: [cardId], references: [id])
  cardId                Int      @unique
}

model Locatario {
  id                    Int      @id @default(autoincrement())
  tipoPessoa            String
  nomeCompleto          String
  email                 String
  telefone              String
  nacionalidade         String
  naturalidade          String
  estadoCivil           String
  dataNascimento        DateTime? 
  cpf                   String?
  rg                    String?
  orgaoExpedidor        String?
  cnpj                  String?
  razaoSocial           String?
  cep                   String
  estado                String
  bairro                String
  endereco              String
  numero                String
  complemento           String?

  anexoCpfRgMotoristaLocatario   String?
  anexoEstadoCivilLocatario      String?
  anexoResidenciaLocatario       String?
  anexoContratoSocialLocatario   String?
  anexoUltimoBalancoLocatario    String?

  card                  Card?    @relation(fields: [cardId], references: [id])
  cardId                Int      @unique
}



model Card {
  id                    Int         @id @default(autoincrement())
  columnId              Int
  column                Column      @relation(fields: [columnId], references: [id], onDelete: Cascade)
  

  imovel                Imovel?
  proprietario          Proprietario?
  imovelDetalhes        ImovelDetalhes?
  locatario             Locatario?


  createdAt             DateTime    @default(now())

  anexos Anexo[] 
}

model Anexo {
  id      Int    @id @default(autoincrement())
  cardId  Int
  path    String
  card    Card   @relation(fields: [cardId], references: [id])
}

model User {
  id        Int     @id @default(autoincrement())
  nome      String
  telefone     String
  email     String  @unique
  senha    String
  foto     String? 
  isAdmin   Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}